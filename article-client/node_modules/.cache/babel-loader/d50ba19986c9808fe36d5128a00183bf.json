{"ast":null,"code":"var _jsxFileName = \"/home/NIX/shchebetovskyi/practice/article-client/src/components/author/AuthorPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { deleteAuthors, getAuthors } from \"../../dal/server/authors-api\";\nimport ArticleRedo from \"../article/articlePage/ArticleRedo\";\nimport styles from \"./style-authors.module.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthorPage = props => {\n  _s();\n\n  const [isRedoMenuOpen, setIsRedoMenuOpen] = useState(false);\n  const [authorState, setAuthorState] = useState({});\n  let history = useHistory();\n  useEffect(() => {\n    getAuthors(window.location.href.split('/')[5]).then(resp => {\n      console.log(resp);\n      const author = resp.data;\n      setAuthorState(author);\n    });\n  }, [setAuthorState]);\n\n  const sendDataToServer = () => {\n    deleteAuthors(window.location.href.split('/')[5]).then(response => {\n      console.log(response);\n      history.push('/authors');\n    }).catch(e => console.log(e.response));\n  };\n\n  const toggleRedoMenu = () => {\n    setIsRedoMenuOpen(prev => !prev);\n  };\n\n  if (authorState === null) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Downloading...\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-shrink-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [\"Name: \", authorState.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btnToggleRedo + (isRedoMenuOpen ? \" \" + styles.__opened : \"\"),\n      onClick: toggleRedoMenu,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: 'https://cdn-icons-png.flaticon.com/512/709/709586.png',\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnText,\n        children: \"Edit menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isRedoMenuOpen && /*#__PURE__*/_jsxDEV(ArticleRedo, {\n      articleState: articleState,\n      authorState: authorState,\n      deleteArticleOnServer: sendDataToServer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthorPage, \"UAeR/J4UK9KOTuLn7IsfIRt6dFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthorPage;\nexport default AuthorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorPage\");","map":{"version":3,"sources":["/home/NIX/shchebetovskyi/practice/article-client/src/components/author/AuthorPage.jsx"],"names":["useEffect","useState","useHistory","deleteAuthors","getAuthors","ArticleRedo","styles","AuthorPage","props","isRedoMenuOpen","setIsRedoMenuOpen","authorState","setAuthorState","history","window","location","href","split","then","resp","console","log","author","data","sendDataToServer","response","push","catch","e","toggleRedoMenu","prev","name","btnToggleRedo","__opened","btnText","articleState"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,8BAA1C;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAIY,OAAO,GAAGX,UAAU,EAAxB;AAEAF,EAAAA,SAAS,CAAE,MAAM;AACbI,IAAAA,UAAU,CAACU,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAD,CAAV,CAA+CC,IAA/C,CAAsDC,IAAD,IAAU;AAC3DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,MAAM,GAAGH,IAAI,CAACI,IAApB;AACAX,MAAAA,cAAc,CAACU,MAAD,CAAd;AACH,KAJD;AAKH,GANQ,EAMN,CAACV,cAAD,CANM,CAAT;;AAQA,QAAMY,gBAAgB,GAAG,MAAM;AAC3BrB,IAAAA,aAAa,CAACW,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAD,CAAb,CAAkDC,IAAlD,CAAuDO,QAAQ,IAAI;AAC/DL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAZ,MAAAA,OAAO,CAACa,IAAR,CAAa,UAAb;AACH,KAHD,EAGGC,KAHH,CAGSC,CAAC,IAAIR,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACH,QAAd,CAHd;AAIH,GALD;;AAOA,QAAMI,cAAc,GAAG,MAAM;AACzBnB,IAAAA,iBAAiB,CAAEoB,IAAD,IAAU,CAACA,IAAZ,CAAjB;AACH,GAFD;;AAIA,MAAInB,WAAW,KAAK,IAApB,EAA0B,oBAAO;AAAA;AAAA,mBAAP;AAE1B,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,2BAA6BA,WAAW,CAACoB,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAQ,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,aAAP,IAAwBvB,cAAc,GAAG,MAAMH,MAAM,CAAC2B,QAAhB,GAA2B,EAAjE,CAAnB;AAAyF,MAAA,OAAO,EAAEJ,cAAlG;AAAA,8BACI;AAAK,QAAA,GAAG,EAAE,uDAAV;AAAmE,QAAA,GAAG,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEvB,MAAM,CAAC4B,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAQKzB,cAAc,iBACX,QAAC,WAAD;AACI,MAAA,YAAY,EAAE0B,YADlB;AAEI,MAAA,WAAW,EAAExB,WAFjB;AAGI,MAAA,qBAAqB,EAAEa;AAH3B;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA5CD;;GAAMjB,U;UAGYL,U;;;KAHZK,U;AA8CN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { deleteAuthors, getAuthors } from \"../../dal/server/authors-api\";\nimport ArticleRedo from \"../article/articlePage/ArticleRedo\";\nimport styles from \"./style-authors.module.css\";\n\n\nconst AuthorPage = (props) => {\n    const [isRedoMenuOpen, setIsRedoMenuOpen] = useState(false);\n    const [authorState, setAuthorState] = useState({});\n    let history = useHistory();\n\n    useEffect( () => {\n        getAuthors(window.location.href.split('/')[5]).then( (resp) => {\n            console.log(resp);\n            const author = resp.data;\n            setAuthorState(author);\n        });\n    }, [setAuthorState] );\n\n    const sendDataToServer = () => {\n        deleteAuthors(window.location.href.split('/')[5]).then(response => {\n            console.log(response);\n            history.push('/authors');\n        }).catch(e => console.log(e.response));\n    }\n\n    const toggleRedoMenu = () => {\n        setIsRedoMenuOpen((prev) => !prev);\n    };\n\n    if (authorState === null) return <>Downloading...</>\n\n    return (\n        <div className=\"flex-shrink-0\">\n            <div className=\"mt-5\">Name: {authorState.name}</div>\n\n            <button className={styles.btnToggleRedo + (isRedoMenuOpen ? \" \" + styles.__opened : \"\")} onClick={toggleRedoMenu}>\n                <img src={'https://cdn-icons-png.flaticon.com/512/709/709586.png'} alt=\"\" />\n                <div className={styles.btnText}>Edit menu</div> \n                \n            </button>\n            {isRedoMenuOpen && (\n                <ArticleRedo\n                    articleState={articleState}\n                    authorState={authorState}\n                    deleteArticleOnServer={sendDataToServer}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default AuthorPage;"]},"metadata":{},"sourceType":"module"}