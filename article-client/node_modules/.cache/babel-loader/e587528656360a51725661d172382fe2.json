{"ast":null,"code":"var _jsxFileName = \"/home/NIX/shchebetovskyi/practice/article-client/src/components/article/ArticleCreatePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { createArticle } from \"../../dal/server/articles-api\";\nimport { getAllAuthors } from \"../../dal/server/authors-api\";\nimport styles from \"./style-articles.module.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArticleCreatePage = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [authorsId, setAuthorsId] = useState([]);\n  const history = useHistory();\n  const [authorState, setauthorState] = useState(null);\n  useEffect(() => {\n    getAllAuthors().then(resp => {\n      const allAuthors = resp.data;\n      setauthorState(allAuthors);\n    });\n  }, []);\n\n  const sendDataToServer = e => {\n    e.preventDefault();\n    createArticle(name, description, authorsId).then(response => {\n      console.log(response);\n      history.push('/articles');\n    }).catch(e => console.log(e.response));\n  };\n\n  const changeNameString = e => {\n    setName(e.target.value);\n  };\n\n  const changeDescriptionString = e => {\n    setDescription(e.target.value);\n  };\n\n  const addIdToArray = authorId => {\n    setAuthorsId([...authorsId, authorId]);\n  };\n\n  if (authorState === null) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Downloading...\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"createArticle\",\n      onSubmit: sendDataToServer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"name\",\n          onChange: changeNameString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"description\",\n          rows: \"5\",\n          onChange: changeDescriptionString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.dropbtn,\n        children: \"Add author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dropdowncontent,\n        children: authorState.map(auhtor => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.but,\n          onClick: () => addIdToArray(auhtor.id),\n          children: auhtor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticleCreatePage, \"ItomiwQIl+zI96ZSQUu3QHkuHOc=\", false, function () {\n  return [useHistory];\n});\n\n_c = ArticleCreatePage;\nexport default ArticleCreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleCreatePage\");","map":{"version":3,"sources":["/home/NIX/shchebetovskyi/practice/article-client/src/components/article/ArticleCreatePage.jsx"],"names":["useEffect","useState","useHistory","createArticle","getAllAuthors","styles","ArticleCreatePage","props","name","setName","description","setDescription","authorsId","setAuthorsId","history","authorState","setauthorState","then","resp","allAuthors","data","sendDataToServer","e","preventDefault","response","console","log","push","catch","changeNameString","target","value","changeDescriptionString","addIdToArray","authorId","dropdown","dropbtn","dropdowncontent","map","auhtor","but","id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { createArticle } from \"../../dal/server/articles-api\";\nimport { getAllAuthors } from \"../../dal/server/authors-api\";\nimport styles from \"./style-articles.module.css\";\n\nconst ArticleCreatePage = (props) => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [authorsId, setAuthorsId] = useState([]);\n    const history = useHistory();\n    const [authorState, setauthorState] = useState(null);\n\n    useEffect(() => {\n        getAllAuthors().then((resp) => {\n            const allAuthors = resp.data;\n            setauthorState(allAuthors);\n        });\n    }, []);\n\n\n    const sendDataToServer = (e) => {\n        e.preventDefault();\n        createArticle(name,description,authorsId).then(response => {\n            console.log(response);\n            history.push('/articles');\n        }).catch(e => console.log(e.response));\n    }\n\n    const changeNameString = (e) => {\n        setName(e.target.value);\n    }\n\n    const changeDescriptionString = (e) => {\n        setDescription(e.target.value);\n    }\n\n    const addIdToArray = (authorId) => {\n        setAuthorsId([...authorsId, authorId]);\n    }\n\n    if (authorState === null) return <>Downloading...</>;\n\n    return (\n        <>\n            <form className={\"createArticle\"} onSubmit={sendDataToServer}>\n                <div className=\"form-inner\">\n                    <input placeholder=\"name\" onChange={changeNameString}/>\n                    <textarea placeholder=\"description\" rows=\"5\" onChange={changeDescriptionString}></textarea>\n                    <button>create</button>\n                </div>\n            </form>\n\n            <div className={styles.dropdown}>\n                <button className={styles.dropbtn}>Add author</button>\n                <div className={styles.dropdowncontent}>\n                    {authorState.map((auhtor) => (\n                        <button className={styles.but} onClick={() => addIdToArray(auhtor.id)}>{auhtor.name}</button>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ArticleCreatePage;"]},"metadata":{},"sourceType":"module"}